*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    /* background: rgb(2,0,36); */
    /* color: rgb(223, 219, 213); */
}
.player-1,.player-2, #header{
  color: rgba(20, 18, 18, 0.853);
}
body {
    height: 100%;
    width: 80%;
    margin: 0 auto;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 10%;
}

.flex{
    display: flex;
    width: 40rem;
    height: 30rem;
    background: linear-gradient(45deg, #d5d0d0 50%, #92cefc 50%);
    border-radius: 20px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    padding: 20px;
}

.game-container{
    flex-direction: column;
    height: 80%;
    width: 80%;
    margin: 0 auto;
    justify-content: center;
    align-items: center;
    margin-top: 10%;
}
#header {
  text-decoration: none;
}
.players{
    width: 100%;
    padding: 10px;
    font-size: 2rem;
    justify-content: space-around;
}

.img-dice{
    width: 100%;
    height: 40vh;
    justify-content: space-around;
}
.hr{
  /* height: 10px; */
  background-color: rgb(223, 217, 217);
  width: 80%;
  margin: 0 auto;
  border-bottom: 2px solid seashell;
  box-shadow: 2px solid grey;

}

.dice {
  height: 130px;
  width: 130px;
  border-radius: 15%;
  position: relative;
  margin: 90px;
  transition: transform 8s ease-in-out;
  background-color: #ffffff; /* White background color */
  border: 2px solid #ea1717; /* Light gray border */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1); /* Soft shadow */
}

.dice::before,
.dice::after {
  content: "";
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #ff0000; /* Red color */
}

.dice::before {
  top: 15px;
  left: 15px;
}

.dice::after {
  bottom: 15px;
  right: 15px;
}

.dice:hover {
  transform: rotate(360deg); /* Rotate the dice on hover */
}

  .img-dice-tr img {
    animation: rotateImage 0.9s linear infinite; /* Apply the rotation animation */
  }
  
  @keyframes rotateImage {
    0% {
      transform: rotate(0deg); /* Initial rotation angle */
      /* transform: rotateImage 2.5s linear infinite; Apply the rotation transform */
    }
    50%{
      transform: rotate(360deg); /* Final rotation angle */
      /* transform: rotateImage 0.5s linear infinite; Apply the rotation transform */
    }
    100% {
      transform: rotate(0deg); /* Final rotation angle */
      /* transform: rotateImage 5.5s linear infinite; Apply the rotation transform */
    }
  }
  

button{
    border-radius: 10px;
    margin: 0 auto;
    margin-top: 20px;
}
.st{
    height: 30px;
    width: 70px;
    background-color: aliceblue;
    padding: 8px;
    color: red;
    border-radius: 10px;
}

button:hover{
    transition: 2s ease-in;
    background-color: rgb(14, 14, 14);
    cursor: pointer;
}
